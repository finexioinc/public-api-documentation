{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "v2",
    "title" : "Finexio API Doc",
    "description" : "Testing Staging API Doc (Prod)"
  },
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "servers" : [ {
    "description" : "Finexio API Staging",
    "url" : "http://stage.api.finexio.com/v2"
  } ],
  "paths" : {
    "/counterparties/" : {
      "get" : {
        "summary" : "List Counterparties",
        "operationId" : "List Counterparties",
        "description" : "Get A Paginated List Of All Counterparties",
        "parameters" : [ {
          "name" : "page",
          "required" : false,
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      },
      "post" : {
        "operationId" : "Create Counterparty",
        "summary" : "Create Counterparty",
        "description" : "Create A New Counterparty",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyCreate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyCreate"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyCreate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      }
    },
    "/counterparties/{id}/" : {
      "get" : {
        "operationId" : "Get Counterparty",
        "summary" : "Get Counterparty Detail",
        "description" : "Get Information Of A Single Counterparty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      },
      "put" : {
        "operationId" : "Update Counterparty",
        "summary" : "Update Counterparty",
        "description" : "Update An Existing Counterparty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      },
      "patch" : {
        "operationId" : "Partial Update Counterparty",
        "summary" : "Partial Update Counterparty",
        "description" : "Partially update an existing counterparty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/CounterpartyUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      }
    },
    "/counterparties/history" : {
      "get" : {
        "summary" : "Counterparties Changes History",
        "operationId" : "Counterparties History",
        "description" : "Changelog for counterparties",
        "parameters" : [ {
          "name" : "page",
          "required" : false,
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Counterparties" ]
      }
    },
    "/invoices/": {
      "get" : {
        "operationId" : "List Invoices",
        "summary" : "List Invoices",
        "description" : "Get A Paginated List Of Invoices",
        "parameters" : [ {
          "name" : "page",
          "required" : false,
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Invoices" ]
      }
    },
    "/invoices/{key}/" : {
      "get" : {
        "operationId" : "Get Invoice",
        "summary" : "Get Invoice Detail",
        "description" : "Get Details Of An Invoice By Key",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Invoices" ]
      }
    },
    "/invoices/batch/" : {
      "post" : {
        "operationId" : "Create Invoice Batch",
        "summary" : "Batch Create Invoices",
        "description" : "Submit an array of invoices.Request Format: Array of Invoice objects",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Invoices" ]
      }
    },
    "/payments/" : {
      "get" : {
        "operationId" : "List of Payments",
        "summary" : "List Payments",
        "description" : "Get A Paginated List Of Payments",
        "parameters" : [ {
          "name" : "page",
          "required" : false,
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Payments" ]
      }
    },
    "/payments/{key}/" : {
      "get" : {
        "operationId" : "Get Payment",
        "summary" : "Get Payment Detail",
        "description" : "Get Details Of A Payment Specified By Key",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Try It to see the response"
                }
              }
            },
            "description" : ""
          }
        },
        "tags" : [ "Payments" ]
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    },
    "schemas" : {
      "Invoice" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "amount_cents" : {
            "type" : "integer",
            "description" : "Invoice amount in specified currency's smallest unit. e.g. $10 would be represented as 1000."
          },
          "currency" : {
            "enum" : [ "USD" ],
            "type" : "string"
          },
          "discount_amount_cents" : {
            "type" : "integer",
            "default" : 0,
            "description" : "Optional invoice discount amount in specified currency's smallest unit.",
            "minimum" : 0
          },
          "invoice_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date of invoice provided by recipient. Must be +/- 365 days from today."
          },
          "invoice_due_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "Optional invoice due date"
          },
          "invoice_number" : {
            "type" : "string",
            "description" : "Uniquely identifies this invoice for recipient.",
            "maxLength" : 49
          },
          "note" : {
            "type" : "string",
            "description" : "Optional additional information you would like to include regarding this invoice."
          },
          "originating_counterparty_id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of one of your organization's internal counterparties (Buyer) that will send payment."
          },
          "receiving_counterparty_id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of one of your external counterparty (Supplier) that will receive invoice payment."
          },
          "metadata" : {
            "type" : "object",
            "description" : "Additional private data represented as key-value pairs. Both the key and value must be strings or integers."
          },
          "payment_id" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "The id of the Payment associated with this invoice. (assigned when when invoice status transitions to in-progress). Note that when there are multiple installments associated with the invoice, this value represents the *most recent* payment only. DEPRECATION WARNING: This field will be depricated in-favor of referencing the associated payment(s) through the installments list."
          },
          "reconciliation_id" : {
            "type" : "string",
            "readOnly" : false,
            "description" : "An string to identify the invoice in your accounting system."
          },
          "account_number" : {
            "type" : "string",
            "readOnly" : false,
            "description" : "Account number. This sensitive information is stored encrypted and can only be retrieved through the API."
          }
        },
        "required" : [ "amount_cents", "invoice_date", "invoice_number", "originating_counterparty_id", "receiving_counterparty_id" ]
      }
    }
  },
  "tags" : [ {
    "name" : "Counterparties",
    "description" : "Counterparties management"
  }, {
    "name" : "Payments",
    "description" : "Payments  management"
  }, {
    "name" : "Invoices",
    "description" : "Invoices  management"
  }, {
    "name" : "Installments",
    "description" : "Counterparties management"
  }, {
    "name" : "Webhooks",
    "description" : "Webhooks to be used by developers"
  } ]
}